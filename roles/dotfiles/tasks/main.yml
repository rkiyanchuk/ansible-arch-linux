---
- name: copy tilix config to temp
  copy:
    src: com.gexperts.Tilix.conf
    dest: "/var/tmp/com.gexperts.Tilix.conf"
    mode: 0644

- name: install tilix settings  # noqa no-changed-when
  shell: "dconf load /com/gexperts/Tilix/ < /var/tmp/com.gexperts.Tilix.conf"
  become: yes
  become_user: "{{ user.name }}"

- name: create tmux plugins directory
  file:
    path: "${HOME}/.tmux/plugins"
    state: directory
    mode: 0755
  become: yes
  become_user: "{{ user.name }}"

- name: install tmux plugin manager
  ansible.builtin.git:
    repo: "https://github.com/tmux-plugins/tpm"
    dest: "${HOME}/.tmux/plugins/tpm"
    version: master
  become: yes
  become_user: "{{ user.name }}"

- name: install oh-my-zsh  # noqa no-changed-when
  shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  register: result
  failed_when: 'result.rc != 0 and "folder already exists" not in result.stdout' 
  become: yes
  become_user: "{{ user.name }}"

- name: install Zsh theme powerlevel10k
  ansible.builtin.git:
    repo: "https://github.com/romkatv/powerlevel10k.git"
    dest: "${HOME}/.oh-my-zsh/custom/themes/powerlevel10k"
    version: master
    depth: 1
  become: yes
  become_user: "{{ user.name }}"

- name: install Zsh plugin zsh-lazyload
  ansible.builtin.git:
    repo: "https://github.com/qoomon/zsh-lazyload"
    dest: "${HOME}/.oh-my-zsh/custom/plugins/zsh-lazyload"
    version: master
    depth: 1
  become: yes
  become_user: "{{ user.name }}"

- name: cleanup default Zsh config installed by oh-my-zsh
  file:
    path: "${HOME}/.zshrc"
    state: absent
  become_user: "{{ user.name }}"

- name: install stow to manage symlinks
  pacman:
    name: stow

- name: clone dotfiles
  ansible.builtin.git:
    repo: "{{ dotfiles.repo }}"
    dest: "${HOME}/dotfiles"
    version: master
  become: yes
  become_user: "{{ user.name }}"

- name: install dotfiles dependencies
  pacman:
    name: "{{ dotfiles.deps }}"

- name: install dotfiles  # noqa no-changed-when
  command: "{{ item }}"
  become_user: "{{ user.name }}"
  with_items: "{{ dotfiles.install_cmds }}"

# Keepassxc config is installed here once instead of symlinked from dotfiles
# repo as keepassxc constantly rewrites its config cause changed to be added
# into Git repository.
- name: create Keepassxc config dir
  file:
    path: "${HOME}/.config/keepassxc"
    state: directory
    mode: 0755
  become: yes
  become_user: "{{ user.name }}"

- name: install Keepassxc config
  copy:
    src: keepassxc.ini
    dest: "${HOME}/.config/keepassxc/"
    mode: 0644
